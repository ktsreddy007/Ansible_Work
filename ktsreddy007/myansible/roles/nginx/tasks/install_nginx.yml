# Install latest NGINX on CentOS/RHEL and Ubuntu/Debian
# using official nginx.org repository
---
############################
# CENTOS / RHEL
############################
- name: Install yum-utils (for repo management)
  yum:
    name: yum-utils
    state: present
  when: ansible_os_family == "RedHat"

- name: Add official NGINX repo (CentOS/RHEL)
  get_url:
    url: "https://nginx.org/packages/centos/7/nginx.repo"
    dest: /etc/yum.repos.d/nginx.repo
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "7"

- name: Import NGINX GPG key (CentOS 7 only)
  rpm_key:
    state: present
    key: https://nginx.org/keys/nginx_signing.key
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "7"

- name: Clean yum cache (CentOS/RHEL)
  command: yum clean all
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "7"
- name: Install NGINX using default OS repos (CentOS 8/9)
  yum:
    name: nginx
    state: latest
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version is version('8', '>=')

#- name: Ensure firewalld and Python bindings are installed (RedHat)
#  package:
#    name:
#      - firewalld
#      - python3-firewall
#    state: present
#  when: ansible_os_family == "RedHat"

#- name: Ensure firewalld is started and enabled
#  service:
#    name: firewalld
#    state: started
#    enabled: true
#  when: ansible_os_family == "RedHat"

#- name: Open HTTP port in firewalld
#  firewalld:
#    service: http
#    permanent: true
#    immediate: yes
#    state: enabled
#  when: ansible_os_family == "RedHat"

#- name: Set SELinux context for nginx root
#  sefcontext:
#    target: "{{ nginx_root }}(/.*)?"
#    setype: httpd_sys_content_t
#    state: present
#  notify: restorecon
#  when: ansible_os_family == "RedHat"
############################
# UBUNTU / DEBIAN
############################
- name: Ensure required packages are installed
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - gnupg
    - ca-certificates
  when: ansible_os_family == "Debian"
- name: Add NGINX signing key (Ubuntu/Debian)
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key
    state: present
  when: ansible_os_family == "Debian"

- name: Add official NGINX repo (Ubuntu/Debian)
  apt_repository:
    repo: "deb http://nginx.org/packages/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} nginx"
    state: present
    filename: nginx
  when: ansible_os_family == "Debian"

- name: Update apt cache (Ubuntu/Debian)
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install latest NGINX (Ubuntu/Debian)
  apt:
    name: nginx
    state: latest
  when: ansible_os_family == "Debian"

- name: Ensure UFW is installed
  apt:
    name: ufw
    state: present
  when: ansible_os_family == "Debian"

- name: Allow HTTP traffic via UFW
  ufw:
    rule: allow
    port: '80'
    proto: tcp
  when: ansible_os_family == "Debian"
############################
# COMMON POST-INSTALL
############################
- name: Ensure NGINX is started and enabled
  service:
    name: nginx
    state: started
    enabled: true
  when: ansible_os_family in ["RedHat", "Debian"]
- name: Ensure NGINX root directory exists
  file:
    path: "{{ nginx_root }}"
    state: directory
    mode: '0755'
  notify: restart nginx
  when: ansible_os_family in ["RedHat", "Debian"]
- name: Deploy custom index.html
  copy:
    src: index.html
    dest: "{{ nginx_root }}"
  notify: restart nginx
  when: ansible_os_family in ["RedHat", "Debian"]
#- name: Install NGINX on CentOS
#  when: ansible_os_family == "RedHat"
#  yum:
#    name: nginx
#    state: present
#- name: Update Cache & Install NGINX on Ubuntu
#  when: ansible_os_family == "Debian"
#  apt:
#    name: nginx
#    state: present
#    update_cache: true
#- name: Ensure NGINX is started and enabled on (CentOS & Ubuntu)
#  when: ansible_os_family in ["RedHat", "Debian"]
#  service:
#   name: nginx
#   state: started
#   enabled: true
#- name: Ensure default nginx /html directory exists on Centos & Ubuntu
#  when: ansible_os_family in  ["RedHat","Debian"]
#  file:
#    path: "{{ nginx_root }}"
#    state: directory
#    mode: '0755'
#- name: Deploy custom index.html on Centos & Ubutu
#  when: ansible_os_family in ["RedHat","Debian"]
#  copy:
#    src: index.html
#    dest: "{{ nginx_root }}"
#- name: Ensure default nginx /html directory exists on Redhat
#  when: ansible_os_family == "RedHat"
#  file:
 #   path: "{{ nginx_root }}"
  #  state: directory
   # mode: '0755'
#- name: Deploy custom index.html on Redhat
 # when: ansible_os_family  == "RedHat"
  #copy:
   # src: index.html
    #dest: "{{ nginx_root }}"
...
